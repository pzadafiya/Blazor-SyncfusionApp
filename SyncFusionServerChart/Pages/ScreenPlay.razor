@page "/screenplay"
@inject HttpClient Http

@using Syncfusion.EJ2.Blazor.Charts
@using SyncFusionServerChart.Pages
@using Newtonsoft.Json

@inject DataHelperService _dataHelper

<h3>Screenplay Dialogue, Broken-down by Gender</h3>
<div class="col-12">
    <div class="row">
        <div class="col-12">
            <BarChartHorizontal TitleText="Men have 60%+ Dialogue" characterList="@characterList.Where(x=>x.MenPecentage > 60).ToList()"></BarChartHorizontal>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <BarChartHorizontal TitleText="Women have 60%+ Dialogue" characterList="@characterList.Where(x => x.WomenPecentage > 60).ToList()"></BarChartHorizontal>
        </div>
        <div class="col-6">
            <BarChartHorizontal TitleText="Gender Balance, +/- 10%" characterList="@characterList.Where(x=>x.MenPecentage < 60 && x.WomenPecentage < 60 ).ToList()"></BarChartHorizontal>
        </div>
    </div>
</div>

@code {

    // List out few selected movie scriptIDs to from large amount of data to display as per requirement
    private int[] men60orMoreDialogueMovies = new int[] { 5534, 7991, 3641, 1421, 3201, 1571, 4365, 1957, 2782, 4853, 4995, 9017, 5521, 5145, 2296, 2961,
                                                          3816, 7557, 2343, 3816,1028,5423,5528,5424,8653 };

    List<CharacterDetailsViewModel> characterList = new List<CharacterDetailsViewModel>();

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {

            var characters = from charDetail in _dataHelper.GetMovieCharacterDetailsList()
                             join customSelected in men60orMoreDialogueMovies on charDetail.ScriptID equals customSelected
                             select new CharacterDetailsViewModel
                             {
                                 MovieName = charDetail.MovieName,
                                 ScriptID = charDetail.ScriptID,
                                 TotalWords = charDetail.TotalWords,
                                 MenWords = charDetail.MenWords,
                                 WomenWords = charDetail.WomenWords
                             };
            characterList = characters.OrderByDescending(x => x.MenPecentage).ToList();

        });

    }

}
