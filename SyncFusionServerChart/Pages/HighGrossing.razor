@page "/HighGrossing"
@using Syncfusion.EJ2.Blazor.Charts
@using Newtonsoft.Json
@inject DataHelperService _dataHelper

<h3>Only High-Grossing Films: Ranked in the Top 2,500 by US Box Office</h3>

<div class="control-section">
    <EjsChart ID="container" Width="80%">
        <ChartArea>
            <ChartAreaBorder Width="0"></ChartAreaBorder>
        </ChartArea>
        <ChartPrimaryXAxis Title="Total Words Percentage" Minimum="0" Maximum="100" IsInversed="true">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis Title="Total Words" RangePadding="ChartRangePadding.Auto">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
            <ChartAxisMinorTickLines Width="0"></ChartAxisMinorTickLines>
        </ChartPrimaryYAxis>

        <ChartLegendSettings Visible="false"></ChartLegendSettings>
        <ChartTooltipSettings Enable="true" format="Movie Name: <b>${point.text}</b> <br/> Male Words: <b>${point.x}%</b> <br/> Female Words: <b>${point.size}%</b> <br/> Total Words count: <b>${point.y}</b>">
        </ChartTooltipSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@characterList" XName="MenPecentage" YName="TotalWords" Size="WomenPecentage" PointColorMapping="Color" Width="1.5" Type="ChartSeriesType.MultiColoredLine">
                <ChartMarker Height="10" Width="10" Shape="ChartShape.Circle">
                    <ChartDataLabel Name="MovieName"></ChartDataLabel>
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>
@code{
    string[] color = { "green", "red" };

    List<CharacterDetailsViewModel> characterList = new List<CharacterDetailsViewModel>();
    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            var characters = _dataHelper.GetMovieCharacterDetailsList().OrderByDescending(s => s.Gross).Take(2500);
            characterList = characters.OrderByDescending(x => x.MenPecentage).ToList();

        });
    }
}